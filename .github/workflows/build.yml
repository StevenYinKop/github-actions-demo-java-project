name: Build Jar
# 基于什么样的条件进行触发

on:
  push:
  workflow_dispatch:
jobs:
  setup-environment:
    runs-on: ubuntu-latest
    env:
      JAVA_VERSION: '17'
      MAVEN_VERSION: '3.8.4'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: ${{env.JAVA_VERSION}}
      - name: Setup Maven
        uses: s4u/setup-maven-action@v1.2.1
        with:
          java-version: ${{env.JAVA_VERSION}}
          maven-version: ${{ env.MAVEN_VERSION }}
      - name: Compile
        run: |
          mvn clean compile
      - name: Test
        id: run-tests
        run: |
          mvn test
      - name: Upload test report if test failed
        if: ${{ failure() && steps.run-tests.outcome == 'failure' }}
        run: |
          echo "Uploading test report to s3 bucket..."
      - name: Package
        run: |
          mvn package
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: jarfile
          path: |
            target/*.jar

  build-docker-image:
    needs: [setup-environment]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: jarfile
          path: target/
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: app:latest
          outputs: type=docker,dest=/tmp/app.tar
      - name: Show Docker CheckSum
        run: |
          docker images
          docker images -q
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-image
          path: /tmp/app.tar
  aws-operations:
    runs-on: ubuntu-latest
    needs: [build-docker-image]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: app-image
          path: /tmp/
      - name: Load Image
        run: |
          docker image ls -q
          docker load --input /tmp/app.tar
          docker image ls -q
      - name: Load AWS Credential
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          REPO_ADDRESS: ${{ secrets.REPO_ADDRESS }}
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{env.REPO_ADDRESS}}
          docker tag app:latest ${{env.REPO_ADDRESS}}/app:latest
          docker push ${{env.REPO_ADDRESS}}/app:latest


